(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{361:function(_,v,e){"use strict";e.r(v);var d=e(17),c=Object(d.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h2",{attrs:{id:"_1-理解什么是协议，了解-tcp-ip-网络协议族的构成，每层协议在应用程序中发挥的作用。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解什么是协议，了解-tcp-ip-网络协议族的构成，每层协议在应用程序中发挥的作用。","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 理解什么是协议，了解 TCP/IP 网络协议族的构成，每层协议在应用程序中发挥的作用。")]),_._v(" "),e("h3",{attrs:{id:"什么是协议？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是协议？","aria-hidden":"true"}},[_._v("#")]),_._v(" 什么是协议？")]),_._v(" "),e("p",[_._v("网络协议的简称，是通信计算机双方必须共同遵从的一组约定。如怎么样建立连接、怎么样互相识别等。只有遵守这个约定，计算机之间才能相互通信交流。它的三要素是："),e("code",[_._v("语法")]),_._v("、"),e("code",[_._v("语义")]),_._v("、"),e("code",[_._v("时序")]),_._v("。")]),_._v(" "),e("p",[e("strong",[_._v("协议往往分成几个层次进行定义，分层定义是为了使某一层协议的改变不影响其他层次的协议。")])]),_._v(" "),e("p",[_._v("协议也可以这样说，就是连入网络的计算机都要遵循的一定的技术规范，关于硬件、软件和端口等的技术规范。")]),_._v(" "),e("h3",{attrs:{id:"tcp-ip-协议族的构成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-协议族的构成","aria-hidden":"true"}},[_._v("#")]),_._v(" TCP/IP 协议族的构成")]),_._v(" "),e("p",[_._v("网络协议通常分不同层次进行开发，每一层分别负责不同的通信功能。")]),_._v(" "),e("p",[_._v("一个协议族，比如 "),e("code",[_._v("TCP/IP")]),_._v("，"),e("strong",[_._v("是一组不同层次上的多个协议的组合")]),_._v("。")]),_._v(" "),e("p",[e("code",[_._v("TCP/IP")]),_._v(" 通常被认为是一个四层协议系统：")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://qiniu.mdnice.com/4be513497d56a071fb7af71b628d0b5a.png",alt:"TCP/IP"}})]),_._v(" "),e("p",[_._v("每一层负责不同的功能:")]),_._v(" "),e("ol",[e("li",[e("p",[e("strong",[_._v("链路层")])]),_._v(" "),e("p",[_._v("有时也称作"),e("code",[_._v("数据链路层")]),_._v("或"),e("code",[_._v("网络接口层")]),_._v("，通常包括操作系统中的设备驱动程序和计算机中对应的网络接口卡。")]),_._v(" "),e("p",[_._v("它们一起处理与电缆(或其他任何传输媒介)的物理接口细节。")])]),_._v(" "),e("li",[e("p",[e("strong",[_._v("网络层")])]),_._v(" "),e("p",[_._v("有时也称作互联网层。处理分组在网络中的活动，例如分组的选路。")]),_._v(" "),e("p",[_._v("在 "),e("code",[_._v("TCP/IP")]),_._v(" 协议族中， 网络层协议包括：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("IP")]),_._v(" 协议 (网际协议)。")]),_._v(" "),e("li",[e("code",[_._v("ICMP")]),_._v(" 协议("),e("code",[_._v("Internet")]),_._v(" 互联网控制报文协议)。")]),_._v(" "),e("li",[e("code",[_._v("IGMP")]),_._v(" 协议("),e("code",[_._v("Internet")]),_._v(" 组管理协议)。")])])]),_._v(" "),e("li",[e("p",[e("strong",[_._v("运输层")])]),_._v(" "),e("p",[_._v("主要为两台主机上的应用程序提供"),e("strong",[_._v("端到端")]),_._v("的通信。")]),_._v(" "),e("p",[_._v("在 "),e("code",[_._v("TCP/IP")]),_._v(" 协议族中，有两个互不相同的传输协议: "),e("code",[_._v("TCP")]),_._v(" (传输控制协议)和 "),e("code",[_._v("UDP")]),_._v(" (用户数据报协议)。")]),_._v(" "),e("p",[e("code",[_._v("TCP")]),_._v(" 为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等。由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。")]),_._v(" "),e("p",[e("code",[_._v("UDP")]),_._v(" 则为应用层提供一种非常简单的服务。**它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。**任何必需的可靠性必须由应用层来提供。")])]),_._v(" "),e("li",[e("p",[e("strong",[_._v("应用层")])]),_._v(" "),e("p",[_._v("负责处理特定的应用程序细节。")]),_._v(" "),e("p",[_._v("几乎各种不同的 "),e("code",[_._v("TCP/IP")]),_._v(" 实现都会提供下面这些通用的应用程序:")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("Telnet")]),_._v(" 远程登录。")]),_._v(" "),e("li",[e("code",[_._v("FTP")]),_._v(" 文件传输协议。")]),_._v(" "),e("li",[e("code",[_._v("SMTP")]),_._v(" 简单邮件传送协议。")]),_._v(" "),e("li",[e("code",[_._v("SNMP")]),_._v(" 简单网络管理协议。")])])])]),_._v(" "),e("h2",{attrs:{id:"_2-三次握手和四次挥手详细原理，为什么要使用这种机制。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-三次握手和四次挥手详细原理，为什么要使用这种机制。","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 三次握手和四次挥手详细原理，为什么要使用这种机制。")]),_._v(" "),e("p",[_._v("建立 "),e("code",[_._v("TCP")]),_._v(" 连接需要三次握手，而断开连接则需要四次握手。整个过程如下图所示：")]),_._v(" "),e("p",[e("img",{attrs:{src:"https://qiniu.mdnice.com/398da98e209e8e18ae3873f8112739cc.png",alt:"TCP"}})]),_._v(" "),e("h3",{attrs:{id:"建立-tcp-连接（三次握手）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立-tcp-连接（三次握手）","aria-hidden":"true"}},[_._v("#")]),_._v(" 建立 "),e("code",[_._v("TCP")]),_._v(" 连接（三次握手）")]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("SYN（Synchronize Sequence Numbers）同步序列编号。是 `TCP/IP` 建立连接时使用的握手信号。\nACK (Acknowledge character）确认字符，在数据通信中，接收站发给发送站的一种传输类控制字符。表示发来的数据已确认接收无误。\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br"),e("span",{staticClass:"line-number"},[_._v("2")]),e("br")])]),e("img",{attrs:{alt:"三次挥手",width:"60%",src:"https://qiniu.mdnice.com/2363554b36b5c238a3ec26a37a569f63.png"}}),_._v(" "),e("ol",[e("li",[e("p",[_._v("第一次握手")]),_._v(" "),e("p",[_._v("首先 "),e("code",[_._v("Client")]),_._v(" 端发送连接请求报文。")])]),_._v(" "),e("li",[e("p",[_._v("第二次握手")]),_._v(" "),e("p",[e("code",[_._v("Server")]),_._v(" 端接收连接后回复 "),e("code",[_._v("ACK")]),_._v(" 报文，并为这次连接分配数据资源。")])]),_._v(" "),e("li",[e("p",[_._v("第三次握手")]),_._v(" "),e("p",[e("code",[_._v("Client")]),_._v(" 端接收到 "),e("code",[_._v("ACK")]),_._v(" 报文后也向 "),e("code",[_._v("Server")]),_._v(" 段发生 "),e("code",[_._v("ACK")]),_._v(" 报文，并分配资源。")])])]),_._v(" "),e("p",[_._v("这样TCP连接就建立了。")]),_._v(" "),e("h3",{attrs:{id:"断开链接（四次挥手）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#断开链接（四次挥手）","aria-hidden":"true"}},[_._v("#")]),_._v(" 断开链接（四次挥手）")]),_._v(" "),e("blockquote",[e("p",[_._v("进行关闭的一方(即发送第一个 "),e("code",[_._v("FIN")]),_._v(" )将执行主动关闭，而另一方(收到这个 "),e("code",[_._v("FIN")]),_._v(") 执行被动关闭。")])]),_._v(" "),e("p",[e("img",{attrs:{src:"https://qiniu.mdnice.com/accd98707dd56831971c257ea2f32bc4.png",alt:"四次挥手"}})]),_._v(" "),e("ol",[e("li",[e("p",[_._v("第一次挥手")]),_._v(" "),e("p",[e("code",[_._v("Client")]),_._v(" 发送一个 "),e("code",[_._v("FIN")]),_._v("，用来关闭 "),e("code",[_._v("Client")]),_._v(" 到 "),e("code",[_._v("Server")]),_._v(" 的数据传送，"),e("code",[_._v("Client")]),_._v(" 进入 "),e("code",[_._v("FIN_WAIT_1")]),_._v(" 状态。")])]),_._v(" "),e("li",[e("p",[_._v("第二次挥手")]),_._v(" "),e("p",[e("code",[_._v("Server")]),_._v(" 收到 "),e("code",[_._v("FIN")]),_._v(" 后，发送一个 "),e("code",[_._v("ACK")]),_._v(" 给 "),e("code",[_._v("Client")]),_._v(" ，确认序号为收到序号 "),e("code",[_._v("+1")]),_._v(" （与 "),e("code",[_._v("SYN")]),_._v(" 相同，一个 "),e("code",[_._v("FIN")]),_._v(" 占用一个序号）， "),e("code",[_._v("Server")]),_._v(" 进入 "),e("code",[_._v("CLOSE_WAIT")]),_._v(" 状态。")])]),_._v(" "),e("li",[e("p",[_._v("第三次挥手")]),_._v(" "),e("p",[e("code",[_._v("Server")]),_._v(" 发送一个 "),e("code",[_._v("FIN")]),_._v(" ，用来关闭 "),e("code",[_._v("Server")]),_._v(" 到 "),e("code",[_._v("Client")]),_._v(" 的数据传送， "),e("code",[_._v("Server")]),_._v(" 进入 "),e("code",[_._v("LAST_ACK")]),_._v(" 状态。")])]),_._v(" "),e("li",[e("p",[_._v("第四次挥手")]),_._v(" "),e("p",[e("code",[_._v("Client")]),_._v(" 收到 "),e("code",[_._v("FIN")]),_._v(" 后， "),e("code",[_._v("Client")]),_._v(" 进入 "),e("code",[_._v("TIME_WAIT")]),_._v(" 状态，接着发送一个 "),e("code",[_._v("ACK")]),_._v(" 给 "),e("code",[_._v("Server")]),_._v(" ，确认序号为收到序号 "),e("code",[_._v("+1")]),_._v(" ， "),e("code",[_._v("Server")]),_._v(" 进入 "),e("code",[_._v("CLOSED")]),_._v(" 状态，完成四次挥手。")])])]),_._v(" "),e("h2",{attrs:{id:"_3-dns-的作用、dns-解析的详细过程，dns优化原理。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns-的作用、dns-解析的详细过程，dns优化原理。","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. DNS 的作用、DNS 解析的详细过程，DNS优化原理。")]),_._v(" "),e("p",[e("code",[_._v("DNS")]),_._v(" 是"),e("strong",[_._v("应用层协议")]),_._v("，事实上他是为其他应用层协议工作的，包括不限于 "),e("code",[_._v("HTTP")]),_._v(" 和 "),e("code",[_._v("SMTP")]),_._v(" 以及 "),e("code",[_._v("FTP")]),_._v("，用于将用户提供的主机名解析为 "),e("code",[_._v("IP")]),_._v(" 地址。")]),_._v(" "),e("p",[e("code",[_._v("DNS")]),_._v(" 的获取流程：")]),_._v(" "),e("ol",[e("li",[e("p",[_._v("用户主机上运行着 "),e("code",[_._v("DNS")]),_._v(" 的客户端，（"),e("code",[_._v("PC")]),_._v(" 机或者手机客户端运行着 "),e("code",[_._v("DNS")]),_._v(" 客户端）。")])]),_._v(" "),e("li",[e("p",[_._v("浏览器将接收到的 "),e("code",[_._v("URL")]),_._v(" 中抽取出域名字段，就是访问的主机名，比如 "),e("code",[_._v("http://www.baidu.com/")]),_._v("，并将这个主机名传送给 "),e("code",[_._v("DNS")]),_._v(" 应用的客户端。")])]),_._v(" "),e("li",[e("p",[e("code",[_._v("DNS")]),_._v(" 客户机端向 "),e("code",[_._v("DNS")]),_._v(" 服务器端发送一份查询报文，报文中包含着要访问的主机名字段（中间包括一些列缓存查询以及分布式 "),e("code",[_._v("DNS")]),_._v(" 集群的工作）。")])]),_._v(" "),e("li",[e("p",[_._v("该 "),e("code",[_._v("DNS")]),_._v(" 客户机最终会收到一份回答报文，其中包含有该主机名对应的 "),e("code",[_._v("IP")]),_._v(" 地址。")])]),_._v(" "),e("li",[e("p",[_._v("一旦该浏览器收到来自 "),e("code",[_._v("DNS")]),_._v(" 的 "),e("code",[_._v("IP")]),_._v(" 地址，就可以向该 "),e("code",[_._v("IP")]),_._v(" 地址定位的 "),e("code",[_._v("HTTP")]),_._v(" 服务器发起 "),e("code",[_._v("TCP")]),_._v(" 连接。")])])]),_._v(" "),e("p",[e("strong",[e("code",[_._v("IP")]),_._v(" 地址的查询过程：")])]),_._v(" "),e("ol",[e("li",[e("p",[_._v("浏览器缓存")]),_._v(" "),e("p",[_._v("当用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对应的 "),e("code",[_._v("IP")]),_._v(" 地址（若曾经访问过该域名且没有清空缓存便存在）。")])]),_._v(" "),e("li",[e("p",[_._v("系统缓存")]),_._v(" "),e("p",[_._v("当浏览器缓存中无域名对应 "),e("code",[_._v("IP")]),_._v(" 则会自动检查用户计算机系统 "),e("code",[_._v("Hosts")]),_._v(" 文件 "),e("code",[_._v("DNS")]),_._v(" 缓存是否有该域名对应 "),e("code",[_._v("IP")]),_._v("。")])]),_._v(" "),e("li",[e("p",[_._v("路由器缓存")]),_._v(" "),e("p",[_._v("当浏览器及系统缓存中均无域名对应 "),e("code",[_._v("IP")]),_._v(" 则进入路由器缓存中检查，以上三步均为客服端的 "),e("code",[_._v("DNS")]),_._v(" 缓存。")])]),_._v(" "),e("li",[e("p",[e("code",[_._v("ISP")]),_._v("（互联网服务提供商）"),e("code",[_._v("DNS")]),_._v(" 缓存")]),_._v(" "),e("p",[_._v("当在用户客服端查找不到域名对应 "),e("code",[_._v("IP")]),_._v(" 地址，则将进入 "),e("code",[_._v("ISP DNS")]),_._v(" 缓存中进行查询。比如你用的是电信的网络，则会进入电信的 "),e("code",[_._v("DNS")]),_._v(" 缓存服务器中进行查找。")])]),_._v(" "),e("li",[e("p",[_._v("根域名服务器")]),_._v(" "),e("p",[_._v("当以上均未完成，则进入根服务器进行查询。全球仅有 "),e("code",[_._v("13")]),_._v(" 台根域名服务器，"),e("code",[_._v("1")]),_._v(" 个主根域名服务器，其余 "),e("code",[_._v("12")]),_._v(" 为辅根域名服务器。根域名收到请求后会查看区域文件记录，若无则将其管辖范围内顶级域名（如.com）服务器 "),e("code",[_._v("IP")]),_._v(" 告诉本地 "),e("code",[_._v("DNS")]),_._v(" 服务器。")])]),_._v(" "),e("li",[e("p",[_._v("顶级域名服务器")]),_._v(" "),e("p",[_._v("顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器的IP地址告诉本地 "),e("code",[_._v("DNS")]),_._v(" 服务器。")])]),_._v(" "),e("li",[e("p",[_._v("主域名服务器")]),_._v(" "),e("p",[_._v("主域名服务器接受到请求后查询自己的缓存，如果没有则进入下一级域名服务器进行查找，并重复该步骤直至找到正确纪录。")])]),_._v(" "),e("li",[e("p",[_._v("保存结果至缓存")]),_._v(" "),e("p",[_._v("本地域名服务器把返回的结果保存到缓存，以备下一次使用，同时将该结果反馈给客户端，客户端通过这个 "),e("code",[_._v("IP")]),_._v(" 地址与 "),e("code",[_._v("HTTP")]),_._v(" 服务器建立 "),e("code",[_._v("TCP")]),_._v(" 链接。")])])]),_._v(" "),e("h2",{attrs:{id:"_4-cdn-的作用和原理。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-cdn-的作用和原理。","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. CDN 的作用和原理。")]),_._v(" "),e("h3",{attrs:{id:"什么是-cdn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cdn","aria-hidden":"true"}},[_._v("#")]),_._v(" 什么是 CDN ?")]),_._v(" "),e("blockquote",[e("p",[_._v("内容分发网络（"),e("code",[_._v("CDN")]),_._v("）是指一种通过互联网互相连接的计算机网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户。")])]),_._v(" "),e("p",[e("strong",[e("code",[_._v("CDN")]),_._v(" 系统主要由 "),e("code",[_._v("4")]),_._v(" 大部分组成，每部分都由集群所构成。这 "),e("code",[_._v("4")]),_._v(" 部分分别是：")])]),_._v(" "),e("ul",[e("li",[e("code",[_._v("CDN")]),_._v(" 专属 "),e("code",[_._v("DNS")]),_._v(" 服务器。")]),_._v(" "),e("li",[_._v("全局负载均衡设备。")]),_._v(" "),e("li",[_._v("区域负载均衡设备。")]),_._v(" "),e("li",[e("code",[_._v("CDN")]),_._v(" 缓存服务器（边缘节点）。")])]),_._v(" "),e("p",[_._v("除了 "),e("code",[_._v("CDN")]),_._v(" 专属 "),e("code",[_._v("DNS")]),_._v(" 服务器，其他 "),e("code",[_._v("3")]),_._v(" 部分集群都有源服务器上对应资源的全部或部分副本。")]),_._v(" "),e("p",[e("code",[_._v("CDN")]),_._v(" 系统通过各部分的负载均衡算法，最终指示客户端使用附近最优的边缘节点中的一台缓存服务器作为服务端，从而提高 "),e("code",[_._v("Web")]),_._v(" 应用的性能。")]),_._v(" "),e("h3",{attrs:{id:"cdn-的基本工作过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cdn-的基本工作过程","aria-hidden":"true"}},[_._v("#")]),_._v(" CDN 的基本工作过程")]),_._v(" "),e("p",[e("strong",[_._v("在传统的 "),e("code",[_._v("Web")]),_._v(" 模型中，发出请求后一般要经过如下几个步骤：")])]),_._v(" "),e("ol",[e("li",[_._v("用户在自己的浏览器中输入要访问的网站域名 "),e("code",[_._v("URL")]),_._v("。")]),_._v(" "),e("li",[_._v("浏览器向本地 "),e("code",[_._v("DNS")]),_._v(" 服务器请求对该域名的解析。")]),_._v(" "),e("li",[_._v("本地 "),e("code",[_._v("DNS")]),_._v(" 服务器中如果缓存有这个域名的解析结果，则直接响应用户的解析请求。")]),_._v(" "),e("li",[_._v("本地 "),e("code",[_._v("DNS")]),_._v(" 服务器中如果没有关于这个域名的解析结果的缓存，则以迭代方式向整个 "),e("code",[_._v("DNS")]),_._v(" 系统请求解析，获得应答后将结果反馈给浏览器。")]),_._v(" "),e("li",[_._v("浏览器得到域名解析结果，就是该域名相应的服务设备的 "),e("code",[_._v("IP")]),_._v(" 地址 。")]),_._v(" "),e("li",[_._v("浏览器获取 "),e("code",[_._v("IP")]),_._v(" 地址之后，经过标准的 "),e("code",[_._v("TCP")]),_._v(" 握手流程，建立 "),e("code",[_._v("TCP")]),_._v(" 连接。")]),_._v(" "),e("li",[_._v("浏览器向服务器发起 "),e("code",[_._v("HTTP")]),_._v(" 请求。")]),_._v(" "),e("li",[_._v("服务器将用户请求内容传送给浏览器。")]),_._v(" "),e("li",[_._v("经过标准的 "),e("code",[_._v("TCP")]),_._v(" 挥手流程，断开 "),e("code",[_._v("TCP")]),_._v(" 连接。")])]),_._v(" "),e("p",[e("strong",[_._v("在网站和用户之间加入 "),e("code",[_._v("CDN")]),_._v(" 以后，用户不会有任何与原来不同的感觉。从宏观上来看，一个典型的 "),e("code",[_._v("CDN")]),_._v(" 用户访问调度流程如下：")])]),_._v(" "),e("ol",[e("li",[e("p",[_._v("当用户点击网站页面上的内容 "),e("code",[_._v("URL")]),_._v("，先经过本地 "),e("code",[_._v("DNS")]),_._v(" 系统解析，如果本地 "),e("code",[_._v("DNS")]),_._v(" 服务器没有相应域名的缓存，则本地 "),e("code",[_._v("DNS")]),_._v(" 系统会将域名的解析权交给 "),e("code",[_._v("CNAME")]),_._v(" 指向的 "),e("code",[_._v("CDN")]),_._v(" 专用 "),e("code",[_._v("DNS")]),_._v(" 服务器。")])]),_._v(" "),e("li",[e("p",[e("strong",[e("code",[_._v("CDN")]),_._v(" 的 "),e("code",[_._v("DNS")]),_._v(" 服务器")]),_._v("将 "),e("code",[_._v("CDN")]),_._v(" 的全局负载均衡设备 "),e("code",[_._v("IP")]),_._v(" 地址返回给用户。")])]),_._v(" "),e("li",[e("p",[_._v("用户向 "),e("code",[_._v("CDN")]),_._v(" 的全局负载均衡设备发起 "),e("code",[_._v("URL")]),_._v(" 访问请求。")])]),_._v(" "),e("li",[e("p",[e("code",[_._v("CDN")]),_._v(" 全局负载均衡设备根据用户 "),e("code",[_._v("IP")]),_._v(" 地址，以及用户请求的 "),e("code",[_._v("URL")]),_._v("，选择一台用户所属区域的区域负载均衡设备，并将请求转发到此设备上。")])]),_._v(" "),e("li",[e("p",[_._v("基于以下这些条件的综合分析之后，区域负载均衡设备会选择一个最优的缓存服务器节点，并从缓存服务器节点处得到缓存服务器的 "),e("code",[_._v("IP")]),_._v(" 地址，最终将得到的IP地址返回给全局负载均衡设备。")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("根据用户 "),e("code",[_._v("IP")]),_._v(" 地址，判断哪一个边缘节点距用户最近。")])]),_._v(" "),e("li",[e("p",[_._v("根据用户所请求的 "),e("code",[_._v("URL")]),_._v(" 中携带的内容名称，判断哪一个边缘节点上有用户所需内容。")])]),_._v(" "),e("li",[e("p",[_._v("查询各个边缘节点当前的负载情况，判断哪一个边缘节点尚有服务能力。")])])])]),_._v(" "),e("li",[e("p",[_._v("全局负载均衡设备把服务器的IP地址返回给用户。")])]),_._v(" "),e("li",[e("p",[_._v("用户向缓存服务器发起请求，缓存服务器响应用户请求，将用户所需内容传送到用户终端。如果这台缓存服务器上并没有用户想要的内容，而区域均衡设备依然将它分配给了用户，那么这台服务器就要向它的上一级缓存服务器请求内容，直至追溯到网站的源服务器将内容拉到本地。")])])]),_._v(" "),e("p",[e("code",[_._v("CDN")]),_._v(" 全局负载均衡设备与 "),e("code",[_._v("CDN")]),_._v(" 区域负载均衡设备根据用户 "),e("code",[_._v("IP")]),_._v(" 地址，将域名解析成相应节点中缓存服务器的 "),e("code",[_._v("IP")]),_._v(" 地址，实现用户就近访问，从而提高服务端响应内容的速度。")]),_._v(" "),e("p",[_._v("理论上，最简单的 "),e("code",[_._v("CDN")]),_._v(" 网络只有一个 "),e("code",[_._v("CDN")]),_._v(" 专用 "),e("code",[_._v("DNS")]),_._v(" 服务器，一个全局负载均衡设备，然后各节点一台缓存服务器，即可运行。")]),_._v(" "),e("h2",{attrs:{id:"_5-http-请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-http-请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么？","aria-hidden":"true"}},[_._v("#")]),_._v(" 5. HTTP 请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么？")]),_._v(" "),e("h2",{attrs:{id:"_6-http-所有状态码的具体含义，看到异常状态码能快速定位问题。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-http-所有状态码的具体含义，看到异常状态码能快速定位问题。","aria-hidden":"true"}},[_._v("#")]),_._v(" 6. HTTP 所有状态码的具体含义，看到异常状态码能快速定位问题。")]),_._v(" "),e("h2",{attrs:{id:"_7-http1-1、http2-0-带来的改变。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-http1-1、http2-0-带来的改变。","aria-hidden":"true"}},[_._v("#")]),_._v(" 7. HTTP1.1、HTTP2.0 带来的改变。")]),_._v(" "),e("h2",{attrs:{id:"_8-https-的加密原理，如何开启-https，如何劫持-https-请求。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-https-的加密原理，如何开启-https，如何劫持-https-请求。","aria-hidden":"true"}},[_._v("#")]),_._v(" 8. HTTPS 的加密原理，如何开启 HTTPS，如何劫持 HTTPS 请求。")]),_._v(" "),e("h2",{attrs:{id:"_9-理解-websocket-协议的底层原理、与-http-的区别。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-理解-websocket-协议的底层原理、与-http-的区别。","aria-hidden":"true"}},[_._v("#")]),_._v(" 9. 理解 WebSocket 协议的底层原理、与 HTTP 的区别。")])])}),[],!1,null,null,null);v.default=c.exports}}]);