(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{355:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-闭包的实现原理和作用，可以列举几个开发中闭包的实际应用。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-闭包的实现原理和作用，可以列举几个开发中闭包的实际应用。","aria-hidden":"true"}},[s._v("#")]),s._v(" 1. 闭包的实现原理和作用，可以列举几个开发中闭包的实际应用。")]),s._v(" "),a("h5",{attrs:{id:"闭包的概念：闭包是可以记住并有权访问所在函数作用域的函数，即使这个函数是在当前函数作用域之外执行。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的概念：闭包是可以记住并有权访问所在函数作用域的函数，即使这个函数是在当前函数作用域之外执行。","aria-hidden":"true"}},[s._v("#")]),s._v(" 闭包的概念：闭包是可以记住并有权访问所在函数作用域的"),a("code",[s._v("函数")]),s._v("，即使这个"),a("code",[s._v("函数")]),s._v("是在当前函数作用域之外执行。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("closure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" closure "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("closure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这段代码中，调用 "),a("code",[s._v("add()")]),s._v(" 时会生成一个函数执行上下文，并推入到"),a("code",[s._v("执行上下文栈中")]),s._v("。\n"),a("code",[s._v("add")]),s._v(" 函数执行完毕后，它的执行上下文会从执行栈中推出，同时局部变量 "),a("code",[s._v("a")]),s._v(" 会被清理才对，但我们在执行 "),a("code",[s._v("console.log(closure(1));")]),s._v("时却输出了结果 "),a("code",[s._v("2")]),s._v("。")]),s._v(" "),a("p",[s._v("我们发现，调用"),a("code",[s._v("add()")]),s._v("时，会返回一个函数 "),a("code",[s._v("ƒ closure(b) { return a + b; }")]),s._v("，说明局部变量 "),a("code",[s._v("a")]),s._v(" 存储于 "),a("code",[s._v("closure")]),s._v(" 函数作用域中，因此我们能得到结果 "),a("code",[s._v("2")]),s._v("。")]),s._v(" "),a("p",[s._v("返回的这个函数 "),a("code",[s._v("ƒ closure(b) { return a + b; }")]),s._v(" 就是我们将要介绍的 "),a("strong",[a("code",[s._v("闭包")])]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"闭包的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的实现原理","aria-hidden":"true"}},[s._v("#")]),s._v(" 闭包的实现原理")]),s._v(" "),a("h5",{attrs:{id:"闭包是如何实现对外部作用域的变量存储的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包是如何实现对外部作用域的变量存储的？","aria-hidden":"true"}},[s._v("#")]),s._v(" 闭包是如何实现对外部作用域的变量存储的？")]),s._v(" "),a("p",[a("strong",[s._v("我们需要先搞清楚：")]),s._v(" 它是拷贝了变量 "),a("code",[s._v("a")]),s._v(" 的值到其作用域中，还是 "),a("code",[s._v("a")]),s._v(" 压根没有被销毁，而是给了闭包 "),a("code",[s._v("closure")]),s._v(" 访问的权限。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("closure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" closure "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("closure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("首先，我们在这段代码 "),a("code",[s._v("++a")]),s._v(" 处打上断点，看下实际执行情况。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/09/24/Raiyz5VeuqWP6jD.png",alt:"屏幕快照 2019-09-24 下午2.57.06.png"}}),a("img",{attrs:{src:"https://i.loli.net/2019/09/24/p4urbaPhGJA1fxi.png",alt:"屏幕快照 2019-09-24 下午2.53.13.png"}})]),s._v(" "),a("p",[s._v("我们发现调用栈为 "),a("code",[s._v("add")]),s._v("，在执行到断点处时，\b作用域对象 "),a("code",[s._v("Scope")]),s._v(" 中存储了当前局部变量 "),a("code",[s._v("a")]),s._v(" 的值为 "),a("code",[s._v("2")]),s._v("，这是我们预期的结果。")]),s._v(" "),a("p",[s._v("接着我们在代码 "),a("code",[s._v("return a + b;")]),s._v(" 处打上断点，实际情况如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/09/24/itPuok97KMTNBfD.png",alt:"屏幕快照 2019-09-24 下午3.06.28.png"}}),a("img",{attrs:{src:"https://i.loli.net/2019/09/24/SYpT7jrPiD8oBEV.png",alt:"屏幕快照 2019-09-24 下午2.49.18.png"}})]),s._v(" "),a("p",[s._v("从 "),a("code",[s._v("Debug")]),s._v(" 的结果来看，当执行到断点 "),a("code",[s._v("return a + b;")]),s._v(" 处时，调用栈 "),a("code",[s._v("add")]),s._v(" 被推出，当前调用栈变成了 "),a("code",[s._v("closure")]),s._v("，作用域对象 "),a("code",[s._v("Scope")]),s._v(" 中局部变量 "),a("code",[s._v("a")]),s._v(" 被销毁，只保存了当前调用栈 "),a("code",[s._v("closure")]),s._v(" 中的变量 "),a("code",[s._v("b")]),s._v("。")]),s._v(" "),a("p",[s._v("而运行到此时，多出了一个 "),a("code",[s._v("Closure")]),s._v(" 对象，它持有所在作用域 "),a("code",[s._v("add")]),s._v(" 中的局部变量 "),a("code",[s._v("a")]),s._v(" 属性，它的值为 "),a("code",[s._v("2")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("这里我们应该能得知：")]),s._v(" 它是拷贝了变量 "),a("code",[s._v("a")]),s._v(" 的值到其作用域中进而给了闭包 "),a("code",[s._v("closure")]),s._v(" 访问的权限。")]),s._v(" "),a("p",[a("strong",[s._v("总结：")])]),s._v(" "),a("p",[s._v("JavaScript 在执行时，如果遇到上述含有 "),a("code",[s._v("闭包")]),s._v(" 的代码，它会在内存开辟出一块空间，这个内存空间称为 "),a("code",[s._v("Closure")]),s._v(" 对象，"),a("strong",[s._v("它用来存储所在函数作用域中的变量，因此其所在作用域的变量即使被销毁，在外部也能访问到存储下来的变量。")])]),s._v(" "),a("p",[a("em",[a("strong",[s._v("闭包查找变量是沿着作用域链向上查找的，本文并没有介绍的作用域链相关的知识，因为个人感觉闭包能缓存变量的原理并不是因为作用域链，作用域链只能说明闭包访问的范围。")])])]),s._v(" "),a("h3",{attrs:{id:"闭包的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的应用场景","aria-hidden":"true"}},[s._v("#")]),s._v(" 闭包的应用场景")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("jQuery")]),s._v(" 源码的实现（ jQuery 就是一个大的闭包 ）。")]),s._v(" "),a("li",[s._v("函数节流。")]),s._v(" "),a("li",[a("strong",[s._v("Ajax")]),s._v(" 的回调函数。")]),s._v(" "),a("li",[s._v("处理循环中的异步操作。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);